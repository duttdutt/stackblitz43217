import{_ as s,i as a,o as l,ak as t}from"./chunks/framework.DYzdy0-_.js";const g=JSON.parse('{"title":"Исполнение","description":"","frontmatter":{},"headers":[],"relativePath":"javascript/Исполнение.md","filePath":"javascript/Исполнение.md"}'),h={name:"javascript/Исполнение.md"};function n(k,i,e,p,F,r){return l(),a("div",null,i[0]||(i[0]=[t(`<h1 id="исполнение" tabindex="-1">Исполнение <a class="header-anchor" href="#исполнение" aria-label="Permalink to &quot;Исполнение&quot;">​</a></h1><h2 id="движок" tabindex="-1">Движок <a class="header-anchor" href="#движок" aria-label="Permalink to &quot;Движок&quot;">​</a></h2><ul><li>Движок — программное обеспечение, которое исполняет JavaScript.</li><li>Виды движков: <ul><li>V8 для Chrome;</li><li>Charka для Microsoft;</li><li>JavaScriptCore для Safari;</li><li>SpiderMonkey для Mozilla.</li></ul></li></ul><h2 id="контекст-исполнения" tabindex="-1">Контекст исполнения <a class="header-anchor" href="#контекст-исполнения" aria-label="Permalink to &quot;Контекст исполнения&quot;">​</a></h2><ul><li>Окружение, в котором исполняется код.</li><li>Управляет порядком исполнения кода, привязкой <code>this</code>, и создает лексическое окружение.</li><li>Создается после парсинга, создания синтаксического дерева, JIT-компиляции.</li><li>Может быть двух типов: глобальным и функциональным.</li><li>Один глобальный на скрипт.</li></ul><h3 id="лексическое-окружение" tabindex="-1">Лексическое окружение <a class="header-anchor" href="#лексическое-окружение" aria-label="Permalink to &quot;Лексическое окружение&quot;">​</a></h3><ul><li><strong>Привязки окружения</strong>(Environment Record) собирает все идентификаторы контекста(параметры, переменные, ф-ии).</li><li><strong>Ссылка на внешний контекст</strong>(Outer Lexical Environment) ссылается на родительский контекст, откуда получает доступ к лексическому окружению родителя, тем самым получает доступ к переменным/ф-иям родителя. <ul><li>Если переменная не найдена в текущем окружении, JS ищет ее выше.</li><li>Если переменная не найдена в глобальном окружении — <code>ReferenceError</code>.</li></ul></li></ul><h2 id="переменные" tabindex="-1">Переменные <a class="header-anchor" href="#переменные" aria-label="Permalink to &quot;Переменные&quot;">​</a></h2><h3 id="идентификатор" tabindex="-1">Идентификатор <a class="header-anchor" href="#идентификатор" aria-label="Permalink to &quot;Идентификатор&quot;">​</a></h3><ul><li>Используется для создания переменных, функций, классов и т.д.</li><li>Должен состоять из тестовых символов, цифр, <code>$</code>, <code>_</code>.</li><li>Может начинаться с <code>_</code>, <code>$</code>, но не может начинаться с цифры.</li><li>Зарезервированные слова не могут быть использованы.</li><li>Регистро-зависимы: <code>APPLE !== apple</code>.</li></ul><h3 id="создание" tabindex="-1">Создание <a class="header-anchor" href="#создание" aria-label="Permalink to &quot;Создание&quot;">​</a></h3><ol><li>Объявление: <code>var x</code><ul><li><code>const</code> не может быть объявлен без инициализации.</li></ul></li><li>Инициализация: <code>x = 0</code></li><li>Объявление и инициализация: <code>var x = 0</code></li></ol><h2 id="область-видимости" tabindex="-1">Область видимости <a class="header-anchor" href="#область-видимости" aria-label="Permalink to &quot;Область видимости&quot;">​</a></h2><ul><li>Определяет видимость и доступность переменных.</li><li>Блочная область видимости: есть у <code>let</code> и у <code>const</code>, тк она блокируют эти переменные.</li><li>Функциональная область видимости: есть у <code>var</code>, тк она блокирует ее.</li></ul><h2 id="глобальныи-объект" tabindex="-1">Глобальный объект <a class="header-anchor" href="#глобальныи-объект" aria-label="Permalink to &quot;Глобальный объект&quot;">​</a></h2><ul><li><p>Объект, который существует в глобальной области видимости.</p></li><li><p>Предоставляет переменные/ф-ии, которые доступны в любом месте:</p><div class="language-js vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes material-theme-darker vp-code" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// [!code word:setTimeout]</span></span>
<span class="line"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">window</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">.</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;">setTimeout</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">(</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">()</span><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;"> =&gt;</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {},</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 1000</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">)</span></span>
<span class="line"><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;">setTimeout</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">(</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">()</span><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;"> =&gt;</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {},</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 1000</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">function</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;"> foo</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">()</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-light-font-style:italic;--shiki-dark:#C792EA;--shiki-dark-font-style:inherit;">    return</span><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;"> function</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> ()</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-light-font-style:italic;--shiki-dark:#C792EA;--shiki-dark-font-style:inherit;">        return</span><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;"> function</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> ()</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-light-font-style:italic;--shiki-dark:#C792EA;--shiki-dark-font-style:inherit;">            return</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;"> window</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">.</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;">setTimeout</span><span style="--shiki-light:#F07178;--shiki-dark:#BFC7D5;">(</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">()</span><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;"> =&gt;</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {},</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 1000</span><span style="--shiki-light:#F07178;--shiki-dark:#BFC7D5;">)</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">        }</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">    }</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">}</span></span></code></pre></div></li><li><p>Браузер: <code>window</code>, <code>globalThis</code>, <code>global</code>.</p></li><li><p>Node.js: <code>global</code>, <code>globalThis</code>.</p></li><li><p>Переменные, объявленные с помощью <code>var</code> и объявления ф-ий становятся глобальными в браузере:</p><div class="language-ts vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes material-theme-darker vp-code twoslash lsp" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;"> </span><span class="twoslash-error"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">str</span></span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">:</span><span style="--shiki-light:#FFCB6B;--shiki-dark:#FFCB6B;"> string</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;"> =</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 1</span></span><div class="twoslash-meta-line twoslash-error-line vp-copy-ignore">Type &#39;number&#39; is not assignable to type &#39;string&#39;.</div></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes material-theme-darker has-highlighted vp-code" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">var</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;"> prop </span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">=</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 100</span></span>
<span class="line"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">window</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">.</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#89DDFF;">prop</span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;"> // 100</span></span>
<span class="line"></span>
<span class="line highlighted warning"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">let</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;"> prop2 </span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">=</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 20</span></span>
<span class="line highlighted warning"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">window</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">.</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#89DDFF;">prop2</span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;"> // undefined</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">function</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;"> a</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">()</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-light-font-style:italic;--shiki-dark:#C792EA;--shiki-dark-font-style:inherit;">    return</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 1</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">}</span></span>
<span class="line"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">window</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">.</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;">a</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">() </span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">var</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#82AAFF;"> b</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;"> =</span><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;"> function</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> ()</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-light-font-style:italic;--shiki-dark:#C792EA;--shiki-dark-font-style:inherit;">    return</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 2</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">}</span></span>
<span class="line"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">window</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">.</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;">b</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">() </span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// 2</span></span>
<span class="line"></span>
<span class="line highlighted warning"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">let</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#82AAFF;"> c</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;"> =</span><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;"> function</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> ()</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {}</span></span>
<span class="line highlighted warning"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">window</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">.</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;">c</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">() </span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// undefined</span></span></code></pre></div></li><li><p>Строгий режим не влияет на глобальный объект:</p><div class="language-javascript vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes material-theme-darker has-highlighted vp-code" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line highlighted"><span style="--shiki-light:#89DDFF;--shiki-dark:#D9F5DD;">&#39;</span><span style="--shiki-light:#C3E88D;--shiki-dark:#C3E88D;">use strict</span><span style="--shiki-light:#89DDFF;--shiki-dark:#D9F5DD;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">var</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;"> prop </span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">=</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 100</span></span>
<span class="line"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">window</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">.</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#89DDFF;">prop</span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;"> // Ok: 100</span></span></code></pre></div></li></ul><h2 id="всплытие" tabindex="-1">Всплытие <a class="header-anchor" href="#всплытие" aria-label="Permalink to &quot;Всплытие&quot;">​</a></h2><ul><li>Переменные, объявленные с помощью <code>var</code> и объявления ф-ий поднимаются вверх текущего контекста.</li></ul><h3 id="var" tabindex="-1"><code>var</code> <a class="header-anchor" href="#var" aria-label="Permalink to &quot;\`var\`&quot;">​</a></h3><ul><li>Переменные поднимаются, но на этапе создания контекста, им присваивается значение <code>undefined</code>.<div class="language-javascript vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes material-theme-darker has-highlighted vp-code" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line highlighted error"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">x </span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// undefined</span></span>
<span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">var</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;"> x </span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">=</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 5</span></span></code></pre></div></li></ul><h3 id="let" tabindex="-1"><code>let</code> <a class="header-anchor" href="#let" aria-label="Permalink to &quot;\`let\`&quot;">​</a></h3><h3 id="const" tabindex="-1"><code>const</code> <a class="header-anchor" href="#const" aria-label="Permalink to &quot;\`const\`&quot;">​</a></h3><ul><li>Переменные тоже поднимаются, им тоже присваивается <code>undefined</code>, но обращение до объявления запрещено и вызовет <code>ReferenceError</code>. Это различие в поведении с <code>var</code> называется <strong>Temporal Dead Zone</strong>.</li><li><strong>TDZ</strong> начинается от начала контекста до объявления переменной:<div class="language-javascript vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes material-theme-darker has-highlighted vp-code" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line highlighted error"><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// TDZ</span></span>
<span class="line highlighted error"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">x </span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// ReferenceError -&gt; still TDZ</span></span>
<span class="line highlighted error"><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// TDZ</span></span>
<span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">let</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;"> x </span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">=</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 5</span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;"> // TDZ is over, x is initialized</span></span></code></pre></div></li></ul><h1 id="функции" tabindex="-1">Функции <a class="header-anchor" href="#функции" aria-label="Permalink to &quot;Функции&quot;">​</a></h1><ul><li>Мы можем получить доступ к объявлениям ф-ий до объявления:<div class="language-javascript vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes material-theme-darker vp-code" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;">foo</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">() </span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// &quot;Works&quot;</span></span>
<span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">function</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;"> foo</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">()</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-light-font-style:italic;--shiki-dark:#C792EA;--shiki-dark-font-style:inherit;">    return</span><span style="--shiki-light:#89DDFF;--shiki-dark:#D9F5DD;"> &#39;</span><span style="--shiki-light:#C3E88D;--shiki-dark:#C3E88D;">Works</span><span style="--shiki-light:#89DDFF;--shiki-dark:#D9F5DD;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">}</span></span></code></pre></div></li><li>Но мы не можем достучаться до выражений ф-ий и стрелочных ф-ий до объявления, тк поднимается только идентификатор, не значение.<div class="language-javascript vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes material-theme-darker has-highlighted vp-code" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line highlighted error"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">console</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">.</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">(foo) </span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// undefined</span></span>
<span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">var</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#82AAFF;"> foo</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;"> =</span><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;"> function</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> ()</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {}</span></span></code></pre></div></li></ul><h1 id="замыкание" tabindex="-1">Замыкание <a class="header-anchor" href="#замыкание" aria-label="Permalink to &quot;Замыкание&quot;">​</a></h1><ul><li>Способность функции сохранять свое лексическое окружение, а значит и ссылку на родительское окружение.</li><li>Это позволяет ф-ии получить доступ к переменным родителя. При отсутствии соответствующего идентификатора, берет ссылку на родителя у текущей ф-ии и идет вверх, пока не найдет, иначе — <code>ReferenceError</code>.<div class="language-javascript vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes material-theme-darker vp-code" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// [!code word:x]</span></span>
<span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">let</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;"> x </span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">=</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 10</span></span>
<span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">function</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;"> outer</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">()</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-light-font-style:italic;--shiki-dark:#C792EA;--shiki-dark-font-style:inherit;">    return</span><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;"> function</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> ()</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-light-font-style:italic;--shiki-dark:#C792EA;--shiki-dark-font-style:inherit;">        return</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;"> x</span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;"> // 10</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">    }</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">}</span></span></code></pre></div></li></ul><h1 id="литерал" tabindex="-1">Литерал <a class="header-anchor" href="#литерал" aria-label="Permalink to &quot;Литерал&quot;">​</a></h1><ul><li>Фиксированное значение, записанное и не хранящееся в переменной(литерал ассоциируется с переменной) или вычисленное. Представляет простейшую форму данных.</li><li>Иммутабелен — не может меняться.</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes material-theme-darker vp-code" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;">12</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">,</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 1.2</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">;</span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">                           // числовые литералы</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#D9F5DD;">&quot;</span><span style="--shiki-light:#C3E88D;--shiki-dark:#C3E88D;">string</span><span style="--shiki-light:#89DDFF;--shiki-dark:#D9F5DD;">&quot;</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">,</span><span style="--shiki-light:#89DDFF;--shiki-dark:#D9F5DD;"> \`</span><span style="--shiki-light:#C3E88D;--shiki-dark:#C3E88D;">template </span><span style="--shiki-light:#89DDFF;--shiki-dark:#D3423E;">\${</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">string</span><span style="--shiki-light:#89DDFF;--shiki-dark:#D3423E;">}</span><span style="--shiki-light:#89DDFF;--shiki-dark:#D9F5DD;">\`</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">;</span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">    // строковые литералы</span></span>
<span class="line"><span style="--shiki-light:#FF9CAC;--shiki-dark:#FF5874;">true</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">,</span><span style="--shiki-light:#FF9CAC;--shiki-dark:#FF5874;"> false</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">;</span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">                       // булевые литералы</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#FF5874;">null</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">,</span><span style="--shiki-light:#89DDFF;--shiki-dark:#FF5874;"> undefined</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">;</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">{},</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {</span><span style="--shiki-light:#F07178;--shiki-dark:#89DDFF;">x</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">:</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">,</span><span style="--shiki-light:#F07178;--shiki-dark:#89DDFF;"> y</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">:</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;">3</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">};</span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">                    // объектные литералы</span></span>
<span class="line"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">[]</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">,</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;"> [</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;">foo</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">() </span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">{},</span><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#FFCB6B;--shiki-dark:#FFCB6B;"> C</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {},</span><span style="--shiki-light:#FF9CAC;--shiki-dark:#FF5874;"> false</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">]</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">;</span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;"> // литералы массивов</span></span></code></pre></div><ul><li><em>Константа</em> vs <em>Литерал</em>: <ul><li><em>Константа</em>: переменная с фиксированным значением литерала.</li><li><em>Литерал</em>: фиксированное значение, присваиваемое переменной и тд.</li></ul></li></ul><h2 id="термины" tabindex="-1">Термины <a class="header-anchor" href="#термины" aria-label="Permalink to &quot;Термины&quot;">​</a></h2><ul><li><em>Операнд</em> — то, что применяется к оператору.<div class="language-javascript vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes material-theme-darker vp-code" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// [!code word:true]</span></span>
<span class="line"><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// [!code word:5]</span></span>
<span class="line"><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// [!code word:2]</span></span>
<span class="line"><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;">5</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;"> **</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 2</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">typeof</span><span style="--shiki-light:#FF9CAC;--shiki-dark:#FF5874;"> true</span></span></code></pre></div></li><li><em>Унарный</em> — оператор, применяемый в одному операнду.<div class="language-javascript vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes material-theme-darker vp-code" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// [!code word:++]</span></span>
<span class="line"><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// [!code word:-]</span></span>
<span class="line"><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// [!code word:+]</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">;</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">+</span><span style="--shiki-light:#FF9CAC;--shiki-dark:#FF5874;">true</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">;</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">-</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;">345</span></span>
<span class="line"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">i</span><span style="--shiki-light:#89DDFF;--shiki-dark:#89DDFF;">++</span></span></code></pre></div></li><li><em>Бинарный</em> — оператор, применяемый к двум операндам.<div class="language-javascript vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes material-theme-darker vp-code" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// [!code word:*]</span></span>
<span class="line"><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;">5</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;"> *</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 2</span></span></code></pre></div></li></ul><h2 id="строгии-режим" tabindex="-1">Строгий режим <a class="header-anchor" href="#строгии-режим" aria-label="Permalink to &quot;Строгий режим&quot;">​</a></h2><ul><li><strong>Директива</strong>.</li><li>Объявляется в начале файла или внутри ф-ии.</li><li>Используется по дефолту в модулях и классах.</li><li>Помогает избежать возможных ошибок.</li></ul><h3 id="изменения" tabindex="-1">Изменения <a class="header-anchor" href="#изменения" aria-label="Permalink to &quot;Изменения&quot;">​</a></h3><ul><li><em>Отключает возможность создания глобальных переменных</em>.<br> В нестрогом режиме, если переменная объявлена без помощи ключевых слов, то она становиться глобальной. В строгом режиме будет ошибка:<div class="language-javascript vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes material-theme-darker vp-code" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// нестрогий режим</span></span>
<span class="line"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">a </span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">=</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 15</span></span>
<span class="line"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">console</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">.</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">(a) </span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// 15</span></span>
<span class="line"><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// строгий режим</span></span>
<span class="line"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">a </span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">=</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 15</span></span>
<span class="line"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">console</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">.</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">(a) </span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// ReferenceError</span></span></code></pre></div></li><li><em>Отключает возможность дублирования параметров ф-ии.</em><br> В нестрогом режиме возможно объявить ф-ию с двумя одинаковыми идентификаторами. Второй параметр перезапишет первый. Это запрещено в строгом режиме:<div class="language-javascript vp-adaptive-theme"><button title="Test" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes material-theme-darker vp-code" style="--shiki-light:#EEFFFF;--shiki-dark:#bbbbbb;--shiki-light-bg:#212121;--shiki-dark-bg:#1e1e1e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// нестрогий режим</span></span>
<span class="line"><span style="--shiki-light:#C792EA;--shiki-dark:#C792EA;">function</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;"> someFunc</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">(</span><span style="--shiki-light:#EEFFFF;--shiki-light-font-style:italic;--shiki-dark:#7986E7;--shiki-dark-font-style:inherit;">a</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">,</span><span style="--shiki-light:#EEFFFF;--shiki-light-font-style:italic;--shiki-dark:#7986E7;--shiki-dark-font-style:inherit;"> a</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">)</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;"> {</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-light-font-style:italic;--shiki-dark:#C792EA;--shiki-dark-font-style:inherit;">    return</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;"> a</span></span>
<span class="line"><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">}</span></span>
<span class="line"><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">console</span><span style="--shiki-light:#89DDFF;--shiki-dark:#C792EA;">.</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">(</span><span style="--shiki-light:#82AAFF;--shiki-dark:#82AAFF;">app</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">(</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#89DDFF;--shiki-dark:#BFC7D5;">,</span><span style="--shiki-light:#F78C6C;--shiki-dark:#F78C6C;"> 2</span><span style="--shiki-light:#EEFFFF;--shiki-dark:#BFC7D5;">)) </span><span style="--shiki-light:#545454;--shiki-light-font-style:italic;--shiki-dark:#697098;--shiki-dark-font-style:italic;">// 2</span></span></code></pre></div></li></ul>`,37)]))}const o=s(h,[["render",n]]);export{g as __pageData,o as default};
